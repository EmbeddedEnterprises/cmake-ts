name: CI
on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
          - windows-latest
        cpp_arch:
          - x64
        include:
          - os: macos-14 # arm
            cpp_arch: arm64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - uses: pnpm/action-setup@v4

      - name: Setup Home Directory
        id: home
        shell: bash
        run: |
          if [[ ${{ runner.os }} == "Windows" ]]; then
            echo "HOME=$USERPROFILE" >> $GITHUB_OUTPUT
          else
            echo "HOME=$HOME" >> $GITHUB_OUTPUT
          fi

      - name: Cache vcpkg/pnpm
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.home.outputs.HOME }}/.pnpm-store
            ${{ steps.home.outputs.HOME }}/vcpkg
          key: ${{ matrix.os }}-${{ matrix.cpp_arch }}-${{ hashFiles('pnpm-lock.yaml', 'package.json') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.cpp_arch }}-

      - name: Cache .cache
        uses: actions/cache@v4
        with:
          path: |
            ./.cache/
          key: ${{ matrix.os }}-${{ matrix.cpp_arch }}-${{ hashFiles('./**/*', '!**/node_modules/**', '!**/build/**', '!**/coverage/**', '!.git/**') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.cpp_arch }}-

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          cmake: true
          ninja: true
          python: true
          vcpkg: 608d1dbcd6969679f82b1ca6b89d58939c9b228e
          architecture: ${{ matrix.cpp_arch }}

      - name: Install Zeromq Mac-OS Dependencies
        if: ${{ contains(matrix.os, 'macos') }}
        run: |
          brew install gnutls autoconf automake libtool
      - name: Install Zeromq Ubuntu Dependencies
        if: ${{ contains(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update -q -y
          sudo apt-get install -y --no-install-recommends autoconf automake libtool

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Lint
        run: pnpm run test.lint

      - name: Tests
        run: pnpm test

      - name: Setup Node 12
        if: matrix.os != 'macos-14'
        uses: actions/setup-node@v4
        with:
          node-version: 12

      - name: Smoke test Node 12
        if: matrix.os != 'macos-14'
        run: node ./build/main.js --help
